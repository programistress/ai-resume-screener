from django.db import models
from django.contrib.postgres.fields import ArrayField 

# before processing
class JobDescription(models.Model):
    raw_test = models.TextField() 
    uploaded_at = models.DateTimeField(auto_now_add=True) # for tracking?

    def __str__(self):
      return self.raw_test[:50]  # first 50 characters of the raw text

# after processing
class ProcessedJobDesc(models.Model):
    job = models.OneToOneField(JobDescription, on_delete = models.CASCADE, related_name="processed_data") # one jobdesc corresponds to one processedjobdesc, if one is deleted then the other one also
    skills = ArrayField(models.CharField(max_length=255), blank=True, null=True) # allowed to be empty or null
    keywords = ArrayField(models.CharField(max_length=255), blank=True, null=True)
    # vector representation of the job description generated by BERT
    embedding_vector = models.JSONField(blank=True, null=True)
    
    
    def __str__(self):
        return f"Processed Data for Job {self.job.id}"